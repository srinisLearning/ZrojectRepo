"use client";

import { getAdminDashboardData } from "@/actions/dashboard";
import DashboardCard from "@/components/functional/dashboard-card";
import PageTitle from "@/components/ui/page-title";
import Spinner from "@/components/ui/spinner";
import React, { useEffect } from "react";
import toast from "react-hot-toast";

function AdminDashboardPage() {
  const [loading, setLoading] = React.useState(true);
  const [dashboardData, setDashboardData] = React.useState({
    totalListings: 0,
    totalBids: 0,
    resultAnnouncedListings: 0,
    platformRevenue: 0,
  });

  const fetchDashboardData = async () => {
    try {
      setLoading(true);
      const response: any = await getAdminDashboardData();
      if (response.success) {
        setDashboardData(response.data);
      } else {
        throw new Error(response.message || "Failed to fetch dashboard data");
      }
    } catch (error: any) {
      toast.error(error.message);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchDashboardData();
  }, []);

  return (
    <div className="flex flex-col gap-5">
      <PageTitle title="Admin Dashboard" />

      {loading ? (
        <Spinner />
      ) : (
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-5">
          <DashboardCard
            title="Total Listings"
            description="Total number of listings created"
            value={dashboardData.totalListings}
            onClickPath="/admin/listings"
          />

          <DashboardCard
            title="Total Bids"
            description="Total number of bids placed"
            value={dashboardData.totalBids}
            onClickPath="/admin/bids-placed"
          />

          <DashboardCard
            title="Result Announced Listings"
            description="Total number of listings with announced results"
            value={dashboardData.resultAnnouncedListings}
            onClickPath="/admin/listings"
          />

          <DashboardCard
            title="Platform Revenue"
            description="Total revenue generated by the platform"
            value={dashboardData.platformRevenue}
            showCurrency={true}
          />
        </div>
      )}
    </div>
  );
}

export default AdminDashboardPage;
